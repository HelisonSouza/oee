<div class="container bg-light">
  <h4>Painel Indicadores da Produção</h4>
  <div class="row">
    <div class="col-sm-8">
      <div class="row">
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Status</h4>
              <h1 class="font-weight-bold d-inline" id="status">Start</h1>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Realizado</h4>
              <h1 class="text-primary font-weight-bold d-inline" id="realizado">00</h1>
              <p class="d-inline m-2">und</p>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Falta</h4>
              <h1 class="text-primary font-weight-bold d-inline" id="falta">00</h1>
              <p class="d-inline m-2">und</p>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Velocidade Média</h4>
              <h1 class="text-primary font-weight-bold d-inline" id="velocidade">00</h1>
              <p class="d-inline ml-2">/min</p>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Encerramento em </h4>
              <h1 class="text-primary font-weight-bold d-inline" id="encerraEm">--:--</h1>
            </div>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card p-2 m-2 shadow">
            <div class="card-body text-center">
              <h4 class="card-title">Defeito </h4>
              <h1 class="text-danger font-weight-bold d-inline" id="defeito">00</h1>
              <p class="d-inline ml-2"> und</p>
            </div>
          </div>
        </div>


      </div>
    </div>
    <div class="col-sm-4">
      <div class="m-auto">
        <h4 class="">Produção Planejada </h4>

        <p class="d-inline">Produto: </p>
        <p class="d-inline ml-2" id="produto"> </p>
        <br>
        <p class="d-inline">Quantidade: </p>
        <p class="d-inline" id="quantidade"></p>
        <p class="d-inline">unidades </p>
        <br>
        <p class="d-inline">Lote: </p>
        <p class="d-inline" id="lote"> </p>
        <br>
        <p class="d-inline">Meta: </p>
        <p class="d-inline" id="meta">00 </p>
        <p class="d-inline">und/min</p>
        <br>
        <p class="d-inline">Inicio: </p>
        <p class="d-inline" id="inicio"> </p>
        <p class="d-inline"></p>
        <br>
        <p class="d-inline">Fim: </p>
        <p class="d-inline" id="fim"></p>
        <br>
        <h4 class="">Pausas Programadas </h4>
        {{#each pausas}}
        <p>
          {{nome}}, das {{inicio}} até {{fim}}
        </p>
        {{/each}}
        {{#each producao/pausas}}
        <br>
        {{/each}}
      </div>

    </div>
  </div>

  <div class="row mt-4">
    <div class="col-sm-12">
      <div class="m-auto p-4 shadow">
        <h4>Eventos identificadas</h4>
        <table class="table table-sm">
          <thead>
            <tr>
              <th scope="col">Tipo</th>
              <th scope="col">Período</th>
              <th scope="col">Duração</th>
              <th scope="col">Descrição</th>
            </tr>
          </thead>
          <tbody id="listaDeEventos">

          </tbody>
        </table>
      </div>
    </div>
  </div>

</div>

<script src="/socket.io/socket.io.js"> </script>

<script>
  //inicializa variáveis
  let encerramentoEm = "--:--"
  let velocidadeMedia = "00"
  let falta = "00"
  let fim = 0
  let segundosTotais = 0
  let status = "Rodando"
  const paradas = {}

  //aponta pra o socket server
  var socket = io()
  socket.on('connect', () => {
    console.log(`Conectado: ${socket.id}`)
  })

  // Informa a view que uma produção foi inicialiazada
  window.onload = () => {
    socket.emit('onload')
  }

  //Recebe os dados da produção inicializada
  socket.on('dadosDaProducao', (dadosDaProducao) => {
    console.log(dadosDaProducao)
    velocidadeMedia = dadosDaProducao.velocidade_media
    falta = (dadosDaProducao.qtd_planejada - dadosDaProducao.qtd_produzida - dadosDaProducao.qtd_defeito)
    calculaTempoEstimadoEnceramento()
    calculaFim(dadosDaProducao.data, dadosDaProducao.produto.velocidade, dadosDaProducao.qtd_planejada)
    sinalizaFimDaProducao(falta)
    atualizaDados(dadosDaProducao)
  })

  //Recebe os dados adicionais
  socket.on('dadosAdicionais', (dados) => {
    status = dados.status
    atualizaDadosAdicionais()
  })

  //Recebe os dados das paradas ocoridas
  socket.on('dadosParada', (dados) => {
    renderListaParadas(dados)
  })

  atualizaDados = (dadosRecebidos) => {
    //Formata datas
    const data = dadosRecebidos.data;
    const dataFormatada = dateFns.format(data, "DD/MM/YYYY - HH:mm")

    //Atualiza o value dos elementos

    document.getElementById('realizado').innerHTML = dadosRecebidos.qtd_produzida
    document.getElementById('falta').innerHTML = falta
    document.getElementById('velocidade').innerHTML = velocidadeMedia
    document.getElementById('encerraEm').innerHTML = encerramentoEm
    document.getElementById('defeito').innerHTML = dadosRecebidos.qtd_defeito
    document.getElementById('produto').innerHTML = dadosRecebidos.produto.nome
    document.getElementById('quantidade').innerHTML = dadosRecebidos.qtd_planejada
    document.getElementById('lote').innerHTML = dadosRecebidos.lote
    document.getElementById('meta').innerHTML = dadosRecebidos.produto.velocidade
    document.getElementById('inicio').innerHTML = dataFormatada
    document.getElementById('fim').innerHTML = fim
  }

  atualizaDadosAdicionais = () => {
    if (status === "Parada")
      document.getElementById('status').style.color = '#FF0000'

    if (status === "Rodando")
      document.getElementById('status').style.color = '#00cc00'

    if (status === "Finalizada")
      document.getElementById('status').style.color = '#0000FF'

    document.getElementById('status').innerHTML = status
  }

  calculaTempoEstimadoEnceramento = () => {
    if (falta == 0 || velocidadeMedia == 0) {

    } else {
      segundosTotais = (falta / velocidadeMedia) * 60

      let h = parseInt(segundosTotais / 3600)
      let m = parseInt((segundosTotais % 3600) / 60)
      let s = parseInt((segundosTotais % 3600) % 60)

      h = ((h < 10) ? "0" : "") + h
      m = ((m < 10) ? ":0" : ":") + m
      s = ((s < 10) ? ":0" : ":") + s

      console.log(h)
      console.log(m)
      console.log(s)
      console.log(`${h}${m}${s}`)
      encerramentoEm = `${h}${m}${s}`
    }
  }

  calculaFim = (dataInicio, velocidadeMedia, planejado) => {
    let minutosPlanejados = planejado / velocidadeMedia
    let result = dateFns.addMinutes(dataInicio, minutosPlanejados)
    let formatResult = dateFns.format(result, "DD/MM/YYYY - HH:mm:ss")
    fim = formatResult
  }

  sinalizaFimDaProducao = (falta) => {
    if (falta == 0) {
      console.log("ENVIOU FINALIZAR!!!!")
      socket.emit('finalizarProducao')
    }
  }

  renderListaParadas = (paradas) => {
    //inicializa array sem dados 
    let results = [{
      id: "--",
      nome: "--",
      inicio: "--:--",
      fim: "--:--",
      duracao: "--:--"
    }]

    if (paradas) {
      //formata dos dados
      paradas.forEach((valor, index) => {
        const inicioFormat = dateFns.format(valor.inicio, "HH:mm:ss")
        const fimFormat = dateFns.format(valor.fim, "HH:mm:ss")
        const duracao = dateFns.distanceInWordsStrict(valor.fim, valor.inicio)
        //passa os dados para o array
        results[index] = {
          id: valor.id,
          nome: valor.motivo.descricao,
          inicio: inicioFormat,
          fim: fimFormat,
          duracao: duracao
        }
      })
    }

    //remove as linhas da tabela para não acrescestar
    let tabela = document.querySelector('#listaDeEventos')
    if (tabela.childElementCount > 0) {
      tabela.replaceChildren()
    }

    //renderiza novas linhas na tabela
    results.forEach((eventos) => {
      var tr = document.createElement("tr")
      tr.innerHTML = `
        <tr>
          <td>${eventos.id}</td>
          <td>${eventos.inicio} as ${eventos.fim}</td>
          <td>${eventos.duracao}</td>
          <td>${eventos.nome}</td>
        </tr>
      `
      document.getElementById('listaDeEventos').appendChild(tr)
    })

  }

</script>